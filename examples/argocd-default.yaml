apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: example-argocd
  labels:
    example: default
spec:
  applicationInstanceLabelKey: "mycompany.com/appname"
  configManagementPlugins: ""
  controller:
    processors:
      operation: 10
      status: 20
    resources: {}
  dex:
    config: ""
    image: quay.io/dexidp/dex
    openShiftOAuth: false
    resources: {}
    version: v2.21.0
  gaTrackingID: ""
  gaAnonymizeUsers: false
  grafana:
    enabled: false
    host: example-argocd-grafana
    image: grafana/grafana
    resources: {}
    size: 1
    version: 6.5.1
  ha:
    enabled: false
  helpChatURL: "https://mycorp.slack.com/argo-cd"
  helpChatText: "Chat now!"
  image: argoproj/argocd
  import: {}
  ingress:
    annotations: {}
    enabled: false
    path: /
  kustomizeBuildOptions: ""
  oidcConfig: ""
  prometheus:
    enabled: false
    host: example-argocd-prometheus
    size: 1
  rbac:
    policy: ""
    defaultPolicy: "role:readonly"
    scopes: "[groups]"
  redis:
    image: redis
    resources: {}
    version: 5.0.3
  repo:
    resources: {}
  repositories: ""
  resourceCustomizations: ""
  resourceExclusions: ""
  server:
    autoscale:
      enabled: false
      hpa:
        maxReplicas: 3
        minReplicas: 1
        scaleTargetRef:
          apiVersion: extensions/v1beta1
          kind: Deployment
          name: example-argocd-server
        targetCPUUtilizationPercentage: 50
    grpc:
      host: example-argocd-grpc
    host: example-argocd
    insecure: false
    resources: {}
    service:
      type: ClusterIP
  statusBadgeEnabled: true
  tls:
    ca:
      configMapName: example-argocd-ca
      secretName: example-argocd-ca
    certs: []
  usersAnonymousEnabled: true
  version: v1.4.1
